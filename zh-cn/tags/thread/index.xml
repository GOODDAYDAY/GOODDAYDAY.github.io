<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Thread on GoodyHao's Blog</title><link>https://gooddayday.github.io/zh-cn/tags/thread/</link><description>Recent content in Thread on GoodyHao's Blog</description><generator>Hugo</generator><language>zh-CN</language><managingEditor>865700600@qq.com (GoodyHao)</managingEditor><webMaster>865700600@qq.com (GoodyHao)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Thu, 02 Oct 2025 13:51:49 +0800</lastBuildDate><atom:link href="https://gooddayday.github.io/zh-cn/tags/thread/index.xml" rel="self" type="application/rss+xml"/><item><title>[Spring] 2. 浅谈Spring异步接口中的自定义线程池与线程复用分析</title><link>https://gooddayday.github.io/zh-cn/2025/10/14.-spring-async-threadpool-and-thread-reuse/</link><pubDate>Thu, 02 Oct 2025 10:23:17 +0800</pubDate><author>865700600@qq.com (GoodyHao)</author><guid>https://gooddayday.github.io/zh-cn/2025/10/14.-spring-async-threadpool-and-thread-reuse/</guid><description>&lt;h1 id="spring-2-浅谈spring异步接口中的自定义线程池与线程复用分析"&gt;[Spring] 2. 浅谈Spring异步接口中的自定义线程池与线程复用分析&lt;/h1&gt;
&lt;h2 id="前言"&gt;前言&lt;/h2&gt;
&lt;p&gt;在Spring应用中处理高并发场景时,合理使用异步编程和线程池管理至关重要。本文将通过实际代码示例,深入分析Spring的默认线程池、自定义线程池以及线程复用的机制。&lt;/p&gt;</description></item></channel></rss>